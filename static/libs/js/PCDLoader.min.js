console.warn("THREE.PCDLoader: As part of the transition to ES6 Modules, the files in 'examples/js' were deprecated in May 2020 (r117) and will be deleted in December 2020 (r124). You can find more information about developing using ES6 Modules in https://threejs.org/docs/#manual/en/introduction/Installation."),THREE.PCDLoader=function(e){THREE.Loader.call(this,e),this.littleEndian=!0},THREE.PCDLoader.prototype=Object.assign(Object.create(THREE.Loader.prototype),{constructor:THREE.PCDLoader,load:function(e,t,i,n){var s=this,r=new THREE.FileLoader(s.manager);r.setPath(s.path),r.setResponseType("arraybuffer"),r.setRequestHeader(s.requestHeader),r.setWithCredentials(s.withCredentials),r.load(e,function(i){try{t(s.parse(i,e))}catch(r){n?n(r):console.error(r),s.manager.itemError(e)}},i,n)},parse:function(e,t){var i=THREE.LoaderUtils.decodeText(new Uint8Array(e)),n=function e(t){var i={},n=t.search(/[\r\n]DATA\s(\S*)\s/i),s=/[\r\n]DATA\s(\S*)\s/i.exec(t.substr(n-1));if(i.data=s[1],i.headerLen=s[0].length+n,i.str=t.substr(0,i.headerLen),i.str=i.str.replace(/\#.*/gi,""),i.version=/VERSION (.*)/i.exec(i.str),i.fields=/FIELDS (.*)/i.exec(i.str),i.size=/SIZE (.*)/i.exec(i.str),i.type=/TYPE (.*)/i.exec(i.str),i.count=/COUNT (.*)/i.exec(i.str),i.width=/WIDTH (.*)/i.exec(i.str),i.height=/HEIGHT (.*)/i.exec(i.str),i.viewpoint=/VIEWPOINT (.*)/i.exec(i.str),i.points=/POINTS (.*)/i.exec(i.str),null!==i.version&&(i.version=parseFloat(i.version[1])),null!==i.fields&&(i.fields=i.fields[1].split(" ")),null!==i.type&&(i.type=i.type[1].split(" ")),null!==i.width&&(i.width=parseInt(i.width[1])),null!==i.height&&(i.height=parseInt(i.height[1])),null!==i.viewpoint&&(i.viewpoint=i.viewpoint[1]),null!==i.points&&(i.points=parseInt(i.points[1],10)),null===i.points&&(i.points=i.width*i.height),null!==i.size&&(i.size=i.size[1].split(" ").map(function(e){return parseInt(e,10)})),null!==i.count)i.count=i.count[1].split(" ").map(function(e){return parseInt(e,10)});else{i.count=[];for(var r=0,o=i.fields.length;r<o;r++)i.count.push(1)}i.offset={};for(var a=0,r=0,o=i.fields.length;r<o;r++)"ascii"===i.data?i.offset[i.fields[r]]=r:(i.offset[i.fields[r]]=a,a+=i.size[r]*i.count[r]);return i.rowSize=a,i}(i),s=[],r=[],o=[];if("ascii"===n.data){for(var a=n.offset,l=i.substr(n.headerLen).split("\n"),h=0,u=l.length;h<u;h++)if(""!==l[h]){var d=l[h].split(" ");if(void 0!==a.x&&(s.push(parseFloat(d[a.x])),s.push(parseFloat(d[a.y])),s.push(parseFloat(d[a.z]))),void 0!==a.rgb){var p=parseFloat(d[a.rgb]),f=p>>16&255,$=p>>8&255,g=p>>0&255;o.push(f/255,$/255,g/255)}void 0!==a.normal_x&&(r.push(parseFloat(d[a.normal_x])),r.push(parseFloat(d[a.normal_y])),r.push(parseFloat(d[a.normal_z])))}}if("binary_compressed"===n.data)for(var c=new Uint32Array(e.slice(n.headerLen,n.headerLen+8)),v=c[0],w=c[1],x=function e(t,i){var n,s,r,o=t.length,a=new Uint8Array(i),l=0,h=0;do if((n=t[l++])<32){if(h+ ++n>i)throw Error("Output buffer is not large enough");if(l+n>o)throw Error("Invalid compressed data");do a[h++]=t[l++];while(--n)}else{if(s=n>>5,r=h-((31&n)<<8)-1,l>=o||7===s&&(s+=t[l++],l>=o))throw Error("Invalid compressed data");if(r-=t[l++],h+s+2>i)throw Error("Output buffer is not large enough");if(r<0||r>=h)throw Error("Invalid compressed data");do a[h++]=a[r++];while(--s+2)}while(l<o);return a}(new Uint8Array(e,n.headerLen+8,v),w),m=new DataView(x.buffer),a=n.offset,h=0;h<n.points;h++)void 0!==a.x&&(s.push(m.getFloat32(n.points*a.x+n.size[0]*h,this.littleEndian)),s.push(m.getFloat32(n.points*a.y+n.size[1]*h,this.littleEndian)),s.push(m.getFloat32(n.points*a.z+n.size[2]*h,this.littleEndian))),void 0!==a.rgb&&(o.push(m.getUint8(n.points*a.rgb+n.size[3]*h+0)/255),o.push(m.getUint8(n.points*a.rgb+n.size[3]*h+1)/255),o.push(m.getUint8(n.points*a.rgb+n.size[3]*h+2)/255)),void 0!==a.normal_x&&(r.push(m.getFloat32(n.points*a.normal_x+n.size[4]*h,this.littleEndian)),r.push(m.getFloat32(n.points*a.normal_y+n.size[5]*h,this.littleEndian)),r.push(m.getFloat32(n.points*a.normal_z+n.size[6]*h,this.littleEndian)));if("binary"===n.data)for(var m=new DataView(e,n.headerLen),a=n.offset,h=0,b=0;h<n.points;h++,b+=n.rowSize)void 0!==a.x&&(s.push(m.getFloat32(b+a.x,this.littleEndian)),s.push(m.getFloat32(b+a.y,this.littleEndian)),s.push(m.getFloat32(b+a.z,this.littleEndian))),void 0!==a.rgb&&(o.push(m.getUint8(b+a.rgb+2)/255),o.push(m.getUint8(b+a.rgb+1)/255),o.push(m.getUint8(b+a.rgb+0)/255)),void 0!==a.normal_x&&(r.push(m.getFloat32(b+a.normal_x,this.littleEndian)),r.push(m.getFloat32(b+a.normal_y,this.littleEndian)),r.push(m.getFloat32(b+a.normal_z,this.littleEndian)));var _=new THREE.BufferGeometry;s.length>0&&_.setAttribute("position",new THREE.Float32BufferAttribute(s,3)),r.length>0&&_.setAttribute("normal",new THREE.Float32BufferAttribute(r,3)),o.length>0&&_.setAttribute("color",new THREE.Float32BufferAttribute(o,3)),_.computeBoundingSphere();var E=new THREE.PointsMaterial({size:.005});o.length>0?E.vertexColors=!0:E.color.setHex(16777215*Math.random());var z=new THREE.Points(_,E),y=t.split("").reverse().join("");return y=(y=/([^\/]*)/.exec(y))[1].split("").reverse().join(""),z.name=y,z}});